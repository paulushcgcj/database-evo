<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.github.paulushcgcj</groupId>
	<artifactId>db-evo</artifactId>
	<version>0.0.4</version>
	<name>Database Evolution</name>
	<description>Demo for database evolution, testing out L2 cache, multiple datasources and reactive</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<java.version>17</java.version>
		<jdk.version>17</jdk.version>

		<skip.integration.tests>true</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>
		<jacoco.skip>true</jacoco.skip>
		<checkstyle.skip>true</checkstyle.skip>

		<jacoco.output.data>${project.build.directory}/coverage-reports</jacoco.output.data>

		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

		<sonar.organization>paulushcgcj-github</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>

		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

		<spring-cloud.version>2021.0.4</spring-cloud.version>
		<testcontainers.version>1.17.5</testcontainers.version>
		<cucumber.version>7.8.1</cucumber.version>
		<jjwt.version>0.11.5</jjwt.version>
		<junit-jupiter-api.version>5.9.0</junit-jupiter-api.version>
		<junit-platform.version>1.9.0</junit-platform.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>


		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson-hibernate-53</artifactId>
			<version>3.18.0</version>
		</dependency>


		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<argLine>@{argLine}</argLine>
							<useSystemClassLoader>false</useSystemClassLoader>
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>**/*IntegrationTest.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<argLine>@{argLine}</argLine>
					<skipTests>${skip.unit.tests}</skipTests>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
					<properties>
						<configurationParameters>
							cucumber.junit-platform.naming-strategy=long
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<configuration>
					<skip>${jacoco.skip}</skip>
					<excludes>
						<exclude>**/configuration/**</exclude>
						<exclude>**/exceptions/**</exclude>
						<exclude>**/dtos/**</exclude>
						<exclude>**/entities/**</exclude>
						<exclude>**/repositories/**</exclude>
						<exclude>**/validators/**</exclude>
						<exclude>**/*$*Builder*</exclude>
						<exclude>**/*Application*</exclude>
						<exclude>**/test/**</exclude>
						<exclude>**/bdd/**</exclude>
						<exclude>**/extensions/**</exclude>
						<exclude>**/*Test*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.output.data}/jacoco-ut.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.output.data}/jacoco-ut.exec</dataFile>
							<outputDirectory>${jacoco.output.data}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.output.data}/jacoco-it.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.output.data}/jacoco-it.exec</dataFile>
							<outputDirectory>${jacoco.output.data}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${jacoco.output.data}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>merged-reports</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${jacoco.output.data}/merged-test-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>70%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.4.1</version>
				<configuration>
					<source>8</source>
					<doctitle>Javadoc Documentation for ${project.name} ${project.version}
					</doctitle>
					<windowtitle>${project.name} ${project.version}
					</windowtitle>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<dependencyCovergence/>
								<requireMavenVersion>
									<version>[3.2,)</version>
									<message>Invalid Maven version. It should be at least 3.2</message>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>1.8</version>
									<message>Invalid Java Version. It should be at least 1.8</message>
								</requireJavaVersion>
								<requireNoRepositories>
									<allowedRepositories>
										<id>central</id>
									</allowedRepositories>
									<allowedPluginRepositories>
										<id>central</id>
									</allowedPluginRepositories>
								</requireNoRepositories>
								<requireReleaseDeps>
									<message>No Snapshots Allowed in releases!</message>
									<onlyWhenRelease>true</onlyWhenRelease>
								</requireReleaseDeps>
								<banDuplicatePomDependencyVersions/>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<skip>${checkstyle.skip}</skip>
					<configLocation>google_checks.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.revelc.code</groupId>
				<artifactId>impsort-maven-plugin</artifactId>
				<version>1.7.0</version>
				<configuration>
					<groups>java.,javax.,org.,com.</groups>
					<staticGroups>java,*</staticGroups>
					<staticAfter>true</staticAfter>
					<removeUnused>true</removeUnused>
					<lineEnding>LF</lineEnding>
				</configuration>
				<executions>
					<execution>
						<id>sort-imports</id>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<version>2.7.2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>makeAggregateBom</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<projectType>application</projectType>
					<outputFormat>all</outputFormat>
					<outputName>bom</outputName>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>17</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
		<profile>
			<id>all-tests</id>
			<properties>
				<build.profile.id>all-tests</build.profile.id>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
				<jacoco.skip>false</jacoco.skip>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<build.profile.id>integration-test</build.profile.id>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
